webpackJsonp([0xb89ee25670ac],{1022:function(e,t){e.exports={data:{jsonDoc:{fields:{slug:"/docs/modules/ui/Layout/"},internal:{content:'[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A convenient tool for laying-out content using "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":", "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":", "},{"type":"inlineCode","value":"Row"},{"type":"text","value":", and "},{"type":"inlineCode","value":"Column"},{"type":"text","value":"."}]},{"type":"paragraph","children":[{"type":"text","value":"Layout is a powerful and versatile tool used for arranging content on the screen. On a conceptual\\nlevel, it mixes the best parts of HTML tables wtih the best parts of HTML framesets, both of\\nwhich were largely abandoned for their drawbacks, ignoring their strengths. A "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":" is simply\\na container for "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":", the only \\"legal\\" child. Conversely, "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" may only be used in a\\n"},{"type":"inlineCode","value":"Layout"},{"type":"text","value":". Cells in a Layout can either be positioned next to each other (horizontally) or\\nabove/below each other (vertically) in what we refer to as a "},{"type":"linkReference","identifier":"row","referenceType":"shortcut","children":[{"type":"text","value":"Row"}]},{"type":"link","url":"ui/Layout.Row","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Row"}]},{"type":"text","value":" or\\n"},{"type":"linkReference","identifier":"column","referenceType":"shortcut","children":[{"type":"text","value":"Column"}]},{"type":"link","url":"ui/Layout.Column","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Column"}]},{"type":"text","value":", respectively."}]},{"type":"paragraph","children":[{"type":"text","value":"The "},{"type":"inlineCode","value":"Row"},{"type":"text","value":" and "},{"type":"inlineCode","value":"Column"},{"type":"text","value":" layout presets describe the direction of layout for their children. This\\ncan sometimes cause confusion. A "},{"type":"inlineCode","value":"Row"},{"type":"text","value":" of children naturally forms a "},{"type":"emphasis","children":[{"type":"text","value":"layout"}]},{"type":"text","value":" whose children can\\nhave the "},{"type":"emphasis","children":[{"type":"text","value":"appearance"}]},{"type":"text","value":" of columns. To keep things clear, think about the layout rather than the\\nwhat the children themselves represent."}]},{"type":"paragraph","children":[{"type":"inlineCode","value":"Layout"},{"type":"text","value":" is an implementation of flex-box, but with built-in rails, properties, and features to\\nhelp avoid common problems with flex-box; things like content overflowing, sizing quirks, and\\npositioning problems regarding content of unknown or undefined dimension."}]},{"type":"paragraph","children":[{"type":"text","value":"The following scenarios are some common cases where "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":" can truly help out. A quality of\\n"},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" you\'ll see below is that when a "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" has no defined size, it automatically sizes to fill\\nany remaining space in the "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":". If there are multiple auto-sizing "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" components, they\\nshare the space, subdividing it equally among themselves. It\'s great to leverage this and only\\napply sizes to "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":"s which must have defined sizes. "},{"type":"inlineCode","value":"shrink"},{"type":"text","value":" is one of the ways you can impose\\nsize guidelines on a "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":". It automatically fits the size of the Cell to the size of its\\ncontent."}]},{"type":"paragraph","children":[{"type":"text","value":"A row of cells where the last one should always attach to the right side, regardless of the size\\nof the main \\"content\\" cell:"}]},{"type":"code","lang":null,"value":"┌───────┬─┐\\n│Main   │R│\\n└───────┴─┘"},{"type":"code","lang":null,"value":"<Row>\\n\\t<Cell>Main Content</Cell>\\n\\t<Cell shrink>Right Side</Cell>\\n</Row>"},{"type":"paragraph","children":[{"type":"text","value":"A \\"two-column\\" layout with equal sized cells using "},{"type":"inlineCode","value":"Row"},{"type":"text","value":":"}]},{"type":"code","lang":null,"value":"┌────┬────┐\\n│L   │R   │\\n└────┴────┘"},{"type":"code","lang":null,"value":"<Row style={{height: \'100%\'}}>\\n\\t<Cell>Left Column</Cell>\\n\\t<Cell>Right Column</Cell>\\n</Row>"},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Remember:"}]},{"type":"text","value":" The cells of the "},{"type":"inlineCode","value":"Row"},{"type":"text","value":" are the columns in our layout. It\'s likely that in a complex\\nlayout "},{"type":"inlineCode","value":"Column"},{"type":"text","value":" would be used inside the left and right cells to arrange the components, as in\\nthe example below."}]},{"type":"paragraph","children":[{"type":"text","value":"A full-height sidebar with a header and body to the right:"}]},{"type":"code","lang":null,"value":"┌──┬──────┐\\n│S │HEADER│\\n│  ├──────┤\\n│  │Body  │\\n│  │      │\\n└──┴──────┘"},{"type":"code","lang":null,"value":"<Row style={{height: \'100%\'}}>\\n\\t<Cell size=\\"20%\\">Sidebar</Cell>\\n\\t<Cell>\\n\\t\\t<Column>\\n\\t\\t\\t<Cell size={90} component=\\"header\\">\\n\\t\\t\\t\\t<h1>HEADER</h1>\\n\\t\\t\\t</Cell>\\n\\t\\t\\t<Cell>\\n\\t\\t\\t\\t<p>Body area</p>\\n\\t\\t\\t</Cell>\\n\\t\\t</Column>\\n\\t</Cell>\\n</Row>"},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" Here, we\'ve set the height of "},{"type":"inlineCode","value":"Row"},{"type":"text","value":" so it fills the height of the screen, allowing the\\nSidebar Cell and content Cell to stretch from the top to the bottom. We\'ve also leveraged the\\n"},{"type":"inlineCode","value":"component"},{"type":"text","value":" prop on the header cell, which tells "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" to render itself as a \\"header\\" HTML tag\\nrather than its usual \\"div\\" tag."}]},{"type":"paragraph","children":[{"type":"text","value":"The example below produces a layout like the following:"}]},{"type":"code","lang":null,"value":"┌─┬─────┬─┐\\n│o│Item │o│\\n└─┴─────┴─┘"},{"type":"paragraph","children":[{"type":"text","value":"You\'ll notice the use of some special classes in the example: "},{"type":"inlineCode","value":"\\"debug layout\\""},{"type":"text","value":". Adding these on\\nany element in your DOM hierarchy will enable borders in Layout and Cell to help visualize what\\nis happening in the layout. They automatically change color the deeper in the stack they go."}]}]},"tags":[{"title":"example","description":"<Layout className=\\"debug layout\\">\\n\\t<Cell shrink>\\n\\t\\t<button>First</button>\\n\\t</Cell>\\n\\t<Cell>\\n\\t\\t<div>A div with some long text in it</div>\\n\\t</Cell>\\n\\t<Cell shrink>\\n\\t\\t<button>Last</button>\\n\\t</Cell>\\n</Layout>"},{"title":"module","description":null,"type":null,"name":"ui/Layout"},{"title":"exports","description":"Cell"},{"title":"exports","description":"CellBase"},{"title":"exports","description":"CellDecorator"},{"title":"exports","description":"Column"},{"title":"exports","description":"Layout"},{"title":"exports","description":"LayoutBase"},{"title":"exports","description":"LayoutDecorator"},{"title":"exports","description":"Row"}],"augments":[],"examples":[{"description":"<Layout className=\\"debug layout\\">\\n\\t<Cell shrink>\\n\\t\\t<button>First</button>\\n\\t</Cell>\\n\\t<Cell>\\n\\t\\t<div>A div with some long text in it</div>\\n\\t</Cell>\\n\\t<Cell shrink>\\n\\t\\t<button>Last</button>\\n\\t</Cell>\\n</Layout>"}],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"module","name":"ui/Layout","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A stateless component that provides a space for your content in a\\n"},{"type":"linkReference","identifier":"layout","referenceType":"shortcut","children":[{"type":"text","value":"Layout"}]},{"type":"link","url":"ui/Layout.Layout","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Layout"}]},{"type":"text","value":", without "},{"type":"link","title":null,"url":"ui/Layout.CellDecorator","children":[{"type":"text","value":"CellDecorator"}]},{"type":"text","value":" applied."}]}]},"tags":[{"title":"class","description":null,"type":null,"name":"CellBase"},{"title":"memberof","description":"ui/Layout"},{"title":"ui","description":null},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"class","name":"CellBase","memberof":"ui/Layout","access":"public","members":{"global":[],"inner":[],"instance":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The alignment of "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":"."}]},{"type":"paragraph","children":[{"type":"text","value":"Aligns this "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" vertically in the case of a horizontal layout or\\nhorizontally in the case of a vertical layout. "},{"type":"inlineCode","value":"\\"start\\""},{"type":"text","value":", "},{"type":"inlineCode","value":"\\"center\\""},{"type":"text","value":" and\\n"},{"type":"inlineCode","value":"\\"end\\""},{"type":"text","value":" are the most commonly used, although all values of "},{"type":"inlineCode","value":"align-self"},{"type":"text","value":" are supported.\\n"},{"type":"inlineCode","value":"\\"start\\""},{"type":"text","value":" refers to the top in a horizontal layout, and left in a vertical LTR layout\\n"},{"type":"inlineCode","value":"\\"end\\""},{"type":"text","value":" refers to the bottom in a horizontal layout, and right in a vertical LTR layout\\n"},{"type":"inlineCode","value":"\\"start\\""},{"type":"text","value":" and "},{"type":"inlineCode","value":"\\"end\\""},{"type":"text","value":" reverse places when in a vertical layout in a RTL locale."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"NameExpression","name":"String"}},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"NameExpression","name":"String"},"access":"public","name":"align","memberof":"ui/Layout.CellBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCellBase#align"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Any valid "},{"type":"linkReference","identifier":"node","referenceType":"shortcut","children":[{"type":"text","value":"Node"}]},{"type":"link","url":"/docs/developer-guide/glossary/#node","title":null,"jsdoc":true,"children":[{"type":"text","value":"/docs/developer-guide/glossary/#node"}]},{"type":"text","value":" that should be positioned in this "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":"."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"NameExpression","name":"Any"}},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"NameExpression","name":"Any"},"access":"public","name":"children","memberof":"ui/Layout.CellBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCellBase#children"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The type of component to use to render as the "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":". May be a DOM node name (e.g \'div\',\\n\'span\', etc.) or a custom component."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Component"}]}},{"title":"default","description":"\'div\'"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Component"}]},"access":"public","name":"component","memberof":"ui/Layout.CellBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCellBase#component"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Sizes "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":" to its contents."}]},{"type":"paragraph","children":[{"type":"text","value":"A "},{"type":"inlineCode","value":"shrink"},{"type":"text","value":"able cell will contract to its minimum size, according to the dimensions of its\\ncontents. This is used when you want the size of this Cell\'s content to influence the\\ndimensions of this cell. "},{"type":"inlineCode","value":"shrink"},{"type":"text","value":" will not allow the contents of the Layout to be pushed\\nbeyond its boundaries (overflowing). See the "},{"type":"linkReference","identifier":"size","referenceType":"shortcut","children":[{"type":"text","value":"size"}]},{"type":"link","url":"ui/Layout.Cell#size","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell#size"}]},{"type":"text","value":" property\\nfor more details."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"NameExpression","name":"Boolean"}},{"title":"default","description":"false"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"NameExpression","name":"Boolean"},"access":"public","name":"shrink","memberof":"ui/Layout.CellBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCellBase#shrink"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Sets the desired size of the Cell using any valid CSS measurement value."}]},{"type":"paragraph","children":[{"type":"text","value":"When used in conjunction with "},{"type":"linkReference","identifier":"shrink","referenceType":"shortcut","children":[{"type":"text","value":"shrink"}]},{"type":"link","url":"ui/Layout.Cell#shrink","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell#shrink"}]},{"type":"text","value":", the size will be\\nthe maximum size, shrinking as necessary, to fit the content."}]},{"type":"paragraph","children":[{"type":"text","value":"E.g."}]},{"type":"list","ordered":false,"start":null,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"size=\\"400px\\""},{"type":"text","value":" -> cell will be 400px, regardless of the dimensions of your content"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"size=\\"400px\\" shrink"},{"type":"text","value":" -> cell will be 400px if your content is greater than 400px,\\nand will match your contents size if it\'s smaller"}]}]}]},{"type":"paragraph","children":[{"type":"text","value":"This accepts any valid CSS measurement value string. If a numeric value is used, it will\\nbe treated as a pixel value and converted to a\\n"},{"type":"linkReference","identifier":"relative unit","referenceType":"shortcut","children":[{"type":"text","value":"relative unit"}]},{"type":"link","url":"ui/resolution.unit","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/resolution.unit"}]},{"type":"text","value":" based on the rules of\\n"},{"type":"linkReference","identifier":"resolution independence","referenceType":"shortcut","children":[{"type":"text","value":"resolution independence"}]},{"type":"link","url":"ui/resolution","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/resolution"}]},{"type":"text","value":"."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Number"}]}},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Number"}]},"access":"public","name":"size","memberof":"ui/Layout.CellBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCellBase#size"}],"events":[],"static":[]},"namespace":"ui/LayoutCellBase"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Applies Cell behaviors."}]}]},"tags":[{"title":"hoc","description":null},{"title":"memberof","description":"ui/Layout"},{"title":"mixes","description":null,"name":"ui/ForwardRef.ForwardRef"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"memberof":"ui/Layout","access":"public","name":"CellDecorator","kind":"constant","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCellDecorator"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A container for "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":"s."}]},{"type":"paragraph","children":[{"type":"text","value":"A stateless component that acts as a containing area for "},{"type":"linkReference","identifier":"cells","referenceType":"shortcut","children":[{"type":"text","value":"Cells"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" to be\\npositioned in a row or a column (horizontally or vertically, respectively. It supports an\\n"},{"type":"linkReference","identifier":"orientation","referenceType":"shortcut","children":[{"type":"text","value":"orientation"}]},{"type":"link","url":"ui/Layout.Layout#orientation","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Layout#orientation"}]},{"type":"text","value":" property for laying-out its contents\\n("},{"type":"inlineCode","value":"Cells"},{"type":"text","value":") in an organized, readable way."}]},{"type":"paragraph","children":[{"type":"text","value":"Example:"}]},{"type":"code","lang":null,"value":"import Input from \'@enact/moonstone/Input\';\\nimport css from \'./LayoutExample.less\';\\n...\\n<fieldset>\\n\\t<Layout align=\\"center\\">\\n\\t\\t<Cell component=\\"label\\" size=\\"40%\\" className={css.label} shrink>First Name</Cell>\\n\\t\\t<Cell component={Input} placeholder=\\"First\\" className={css.input} />\\n\\t</Layout>\\n\\t<Layout align=\\"center\\">\\n\\t\\t<Cell component=\\"label\\" size=\\"40%\\" className={css.label} shrink>Last Name</Cell>\\n\\t\\t<Cell component={Input} placeholder=\\"Last\\" className={css.input} />\\n\\t</Layout>\\n</fieldset>"}]},"tags":[{"title":"class","description":null,"type":null,"name":"LayoutBase"},{"title":"ui","description":null},{"title":"memberof","description":"ui/Layout"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"class","name":"LayoutBase","memberof":"ui/Layout","access":"public","members":{"global":[],"inner":[],"instance":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The alignment of children."}]},{"type":"paragraph","children":[{"type":"text","value":"Aligns the children "},{"type":"linkReference","identifier":"cells","referenceType":"shortcut","children":[{"type":"text","value":"Cells"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" vertically in the case of a horizontal\\nlayout or horizontally in the case of a vertical layout. "},{"type":"inlineCode","value":"\\"start\\""},{"type":"text","value":", "},{"type":"inlineCode","value":"\\"center\\""},{"type":"text","value":" and\\n"},{"type":"inlineCode","value":"\\"end\\""},{"type":"text","value":" are the most commonly used, although all values of "},{"type":"inlineCode","value":"align-items"},{"type":"text","value":" are supported.\\n"},{"type":"inlineCode","value":"\\"start\\""},{"type":"text","value":" refers to the top in a horizontal layout, and left in a vertical LTR layout\\n"},{"type":"inlineCode","value":"\\"end\\""},{"type":"text","value":" refers to the bottom in a horizontal layout, and right in a vertical LTR layout\\n"},{"type":"inlineCode","value":"\\"start\\""},{"type":"text","value":" and "},{"type":"inlineCode","value":"\\"end\\""},{"type":"text","value":" reverse places when in a vertical layout in a RTL locale.\\nThis includes support for "},{"type":"inlineCode","value":"align-parts"},{"type":"text","value":" which is shorthand for combining "},{"type":"inlineCode","value":"align-items"},{"type":"text","value":"\\nand "},{"type":"inlineCode","value":"justify-content"},{"type":"text","value":" into a single property, separated by a space, in that order.\\nThis allows you to specify both the horizontal and vertical alignment in one property,\\nseparated by a space."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"NameExpression","name":"String"}},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"NameExpression","name":"String"},"access":"public","name":"align","memberof":"ui/Layout.LayoutBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase#align"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Only "},{"type":"linkReference","identifier":"cell","referenceType":"shortcut","children":[{"type":"text","value":"Cell"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" components are supported as children."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Cell"},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Cell"}]}]}},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Cell"},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Cell"}]}]},"access":"public","name":"children","memberof":"ui/Layout.LayoutBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase#children"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The type of component to use to render as the "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":". May be a DOM node name (e.g \'div\',\\n\'span\', etc.) or a custom component."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Component"}]}},{"title":"default","description":"\'div\'"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Component"}]},"access":"public","name":"component","memberof":"ui/Layout.LayoutBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase#component"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Allows this "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":" to have following siblings drawn on the same line as itself\\ninstead of carving out the entire horizontal space for itself."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"NameExpression","name":"Boolean"}},{"title":"default","description":"false"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"NameExpression","name":"Boolean"},"access":"public","name":"inline","memberof":"ui/Layout.LayoutBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase#inline"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The orientation of the "},{"type":"inlineCode","value":"Layout"},{"type":"text","value":", i.e. how the children "},{"type":"linkReference","identifier":"cells","referenceType":"shortcut","children":[{"type":"text","value":"Cells"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" are\\npositioned on the screen. Must be either "},{"type":"inlineCode","value":"\'horizontal\'"},{"type":"text","value":" or "},{"type":"inlineCode","value":"\'vertical\'"},{"type":"text","value":"."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"NameExpression","name":"String"}},{"title":"default","description":"\'horizontal\'"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"NameExpression","name":"String"},"access":"public","name":"orientation","memberof":"ui/Layout.LayoutBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase#orientation"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Sets the Layout\'s "},{"type":"inlineCode","value":"flex-wrap"},{"type":"text","value":" values."}]},{"type":"paragraph","children":[{"type":"text","value":"Determines how a Layout handles its cells if there are more than fit in the available\\nspace. This works like a normal "},{"type":"inlineCode","value":"Boolean"},{"type":"text","value":" prop, but also accepts strings for customization\\nbeyond the basic on/off support. In addition to "},{"type":"inlineCode","value":"true"},{"type":"text","value":" and "},{"type":"inlineCode","value":"false"},{"type":"text","value":", the following strings\\nare supported: \'wrap\', \'nowrap\', \'reverse\'. \'reverse\' performs standard line wrapping but\\nadditional lines are placed above/before the preceding line instead of below/after."}]}]},"tags":[{"title":"type","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Boolean"},{"type":"NameExpression","name":"String"}]}},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Boolean"},{"type":"NameExpression","name":"String"}]},"access":"public","name":"wrap","memberof":"ui/Layout.LayoutBase","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase#wrap"}],"events":[],"static":[]},"namespace":"ui/LayoutLayoutBase"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A stateless component that provides a space for your content in a\\n"},{"type":"linkReference","identifier":"layout","referenceType":"shortcut","children":[{"type":"text","value":"Layout"}]},{"type":"link","url":"ui/Layout.Layout","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Layout"}]},{"type":"text","value":"."}]}]},"tags":[{"title":"class","description":null,"type":null,"name":"Cell"},{"title":"memberof","description":"ui/Layout"},{"title":"extends","description":null,"type":null,"name":"ui/Layout.CellBase"},{"title":"mixes","description":null,"name":"ui/Layout.CellDecorator"},{"title":"ui","description":null},{"title":"public","description":null}],"augments":[{"title":"extends","description":null,"type":null,"name":"ui/Layout.CellBase"}],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"class","name":"Cell","memberof":"ui/Layout","access":"public","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutCell"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Applies Layout behaviors."}]}]},"tags":[{"title":"hoc","description":null},{"title":"memberof","description":"ui/Layout"},{"title":"mixes","description":null,"name":"ui/ForwardRef.ForwardRef"},{"title":"public","description":null}],"augments":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"memberof":"ui/Layout","access":"public","name":"LayoutDecorator","kind":"constant","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayoutDecorator"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A container for "},{"type":"inlineCode","value":"Cell"},{"type":"text","value":"s."}]},{"type":"paragraph","children":[{"type":"text","value":"A stateless component that acts as a containing area for "},{"type":"linkReference","identifier":"cells","referenceType":"shortcut","children":[{"type":"text","value":"Cells"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" to be\\npositioned in a row or a column (horizontally or vertically, respectively. It supports an\\n"},{"type":"linkReference","identifier":"orientation","referenceType":"shortcut","children":[{"type":"text","value":"orientation"}]},{"type":"link","url":"ui/Layout.Layout#orientation","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Layout#orientation"}]},{"type":"text","value":" property for laying-out its contents\\n("},{"type":"inlineCode","value":"Cells"},{"type":"text","value":") in an organized, readable way."}]},{"type":"paragraph","children":[{"type":"text","value":"Example:"}]},{"type":"code","lang":null,"value":"import Input from \'@enact/moonstone/Input\';\\nimport css from \'./LayoutExample.less\';\\n...\\n<fieldset>\\n\\t<Layout align=\\"center\\">\\n\\t\\t<Cell component=\\"label\\" size=\\"40%\\" className={css.label} shrink>First Name</Cell>\\n\\t\\t<Cell component={Input} placeholder=\\"First\\" className={css.input} />\\n\\t</Layout>\\n\\t<Layout align=\\"center\\">\\n\\t\\t<Cell component=\\"label\\" size=\\"40%\\" className={css.label} shrink>Last Name</Cell>\\n\\t\\t<Cell component={Input} placeholder=\\"Last\\" className={css.input} />\\n\\t</Layout>\\n</fieldset>"}]},"tags":[{"title":"class","description":null,"type":null,"name":"Layout"},{"title":"memberof","description":"ui/Layout"},{"title":"extends","description":null,"type":null,"name":"ui/Layout.LayoutBase"},{"title":"mixes","description":null,"name":"ui/ForwardRef.ForwardRef"},{"title":"ui","description":null},{"title":"public","description":null}],"augments":[{"title":"extends","description":null,"type":null,"name":"ui/Layout.LayoutBase"}],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"class","name":"Layout","memberof":"ui/Layout","access":"public","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutLayout"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Shorthand for "},{"type":"inlineCode","value":"<Layout orientation=\\"vertical\\">"},{"type":"text","value":", which positions its\\n"},{"type":"linkReference","identifier":"cells","referenceType":"shortcut","children":[{"type":"text","value":"Cells"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" vertically."}]},{"type":"code","lang":null,"value":"┌────┐\\n├────┤\\n├────┤\\n├────┤\\n└────┘"}]},"tags":[{"title":"class","description":null,"type":null,"name":"Column"},{"title":"memberof","description":"ui/Layout"},{"title":"extends","description":null,"type":null,"name":"ui/Layout.Layout"},{"title":"mixes","description":null,"name":"ui/ForwardRef.ForwardRef"},{"title":"ui","description":null},{"title":"public","description":null}],"augments":[{"title":"extends","description":null,"type":null,"name":"ui/Layout.Layout"}],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"class","name":"Column","memberof":"ui/Layout","access":"public","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutColumn"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Shorthand for "},{"type":"inlineCode","value":"<Layout orientation=\\"horizontal\\">"},{"type":"text","value":", which positions its\\n"},{"type":"linkReference","identifier":"cells","referenceType":"shortcut","children":[{"type":"text","value":"Cells"}]},{"type":"link","url":"ui/Layout.Cell","title":null,"jsdoc":true,"children":[{"type":"text","value":"ui/Layout.Cell"}]},{"type":"text","value":" horizontally."}]},{"type":"code","lang":null,"value":"┌─┬─┬─┬─┐\\n│ │ │ │ │\\n└─┴─┴─┴─┘"}]},"tags":[{"title":"class","description":null,"type":null,"name":"Row"},{"title":"memberof","description":"ui/Layout"},{"title":"extends","description":null,"type":null,"name":"ui/Layout.Layout"},{"title":"mixes","description":null,"name":"ui/ForwardRef.ForwardRef"},{"title":"ui","description":null},{"title":"public","description":null}],"augments":[{"title":"extends","description":null,"type":null,"name":"ui/Layout.Layout"}],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"yields":[],"kind":"class","name":"Row","memberof":"ui/Layout","access":"public","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"ui/LayoutRow"}]},"namespace":"ui/Layout"}]'
}},modulesList:{edges:[{node:{fields:{slug:"/docs/modules/core/dispatcher/"}}},{node:{fields:{slug:"/docs/modules/core/handle/"}}},{node:{fields:{slug:"/docs/modules/core/hoc/"}}},{node:{fields:{slug:"/docs/modules/core/keymap/"}}},{node:{fields:{slug:"/docs/modules/core/kind/"}}},{node:{fields:{slug:"/docs/modules/core/platform/"}}},{node:{fields:{slug:"/docs/modules/core/snapshot/"}}},{node:{fields:{slug:"/docs/modules/core/util/"}}},{node:{fields:{slug:"/docs/modules/i18n/$L/"}}},{node:{fields:{slug:"/docs/modules/i18n/I18nDecorator/"}}},{node:{fields:{slug:"/docs/modules/i18n/Text/"}}},{node:{fields:{slug:"/docs/modules/i18n/util/"}}},{node:{fields:{slug:"/docs/modules/spotlight/"}}},{node:{fields:{slug:"/docs/modules/spotlight/Accelerator/"}}},{node:{fields:{slug:"/docs/modules/spotlight/Pause/"}}},{node:{fields:{slug:"/docs/modules/spotlight/SpotlightContainerDecorator/"}}},{node:{fields:{slug:"/docs/modules/spotlight/SpotlightRootDecorator/"}}},{node:{fields:{slug:"/docs/modules/spotlight/Spottable/"}}},{node:{fields:{slug:"/docs/modules/ui/A11yDecorator/"}}},{node:{fields:{slug:"/docs/modules/ui/AnnounceDecorator/"}}},{node:{fields:{slug:"/docs/modules/ui/BodyText/"}}},{node:{fields:{slug:"/docs/modules/ui/Button/"}}},{node:{fields:{slug:"/docs/modules/ui/Cancelable/"}}},{node:{fields:{slug:"/docs/modules/ui/Changeable/"}}},{node:{fields:{slug:"/docs/modules/ui/ComponentOverride/"}}},{node:{fields:{slug:"/docs/modules/ui/FloatingLayer/"}}},{node:{fields:{slug:"/docs/modules/ui/ForwardRef/"}}},{node:{fields:{slug:"/docs/modules/ui/GridListImageItem/"}}},{node:{fields:{slug:"/docs/modules/ui/Group/"}}},{node:{fields:{slug:"/docs/modules/ui/Heading/"}}},{node:{fields:{slug:"/docs/modules/ui/Icon/"}}},{node:{fields:{slug:"/docs/modules/ui/IconButton/"}}},{node:{fields:{slug:"/docs/modules/ui/Image/"}}},{node:{fields:{slug:"/docs/modules/ui/ImageItem/"}}},{node:{fields:{slug:"/docs/modules/ui/Item/"}}},{node:{fields:{slug:"/docs/modules/ui/LabeledIcon/"}}},{node:{fields:{slug:"/docs/modules/ui/Layout/"}}},{node:{fields:{slug:"/docs/modules/ui/Marquee/"}}},{node:{fields:{slug:"/docs/modules/ui/Measurable/"}}},{node:{fields:{slug:"/docs/modules/ui/Media/"}}},{node:{fields:{slug:"/docs/modules/ui/Placeholder/"}}},{node:{fields:{slug:"/docs/modules/ui/ProgressBar/"}}},{node:{fields:{slug:"/docs/modules/ui/RadioDecorator/"}}},{node:{fields:{slug:"/docs/modules/ui/Repeater/"}}},{node:{fields:{slug:"/docs/modules/ui/Resizable/"}}},{node:{fields:{slug:"/docs/modules/ui/Routable/"}}},{node:{fields:{slug:"/docs/modules/ui/Scroller/"}}},{node:{fields:{slug:"/docs/modules/ui/Skinnable/"}}},{node:{fields:{slug:"/docs/modules/ui/Slider/"}}},{node:{fields:{slug:"/docs/modules/ui/SlotItem/"}}},{node:{fields:{slug:"/docs/modules/ui/Slottable/"}}},{node:{fields:{slug:"/docs/modules/ui/Spinner/"}}},{node:{fields:{slug:"/docs/modules/ui/ToggleIcon/"}}},{node:{fields:{slug:"/docs/modules/ui/ToggleItem/"}}},{node:{fields:{slug:"/docs/modules/ui/Toggleable/"}}},{node:{fields:{slug:"/docs/modules/ui/Touchable/"}}},{node:{fields:{slug:"/docs/modules/ui/Transition/"}}},{node:{fields:{slug:"/docs/modules/ui/ViewManager/"}}},{node:{fields:{slug:"/docs/modules/ui/VirtualList/"}}},{node:{fields:{slug:"/docs/modules/ui/resolution/"}}},{node:{fields:{slug:"/docs/modules/webos/LS2Request/"}}},{node:{fields:{slug:"/docs/modules/webos/application/"}}},{node:{fields:{slug:"/docs/modules/webos/deviceinfo/"}}},{node:{fields:{slug:"/docs/modules/webos/keyboard/"}}},{node:{fields:{slug:"/docs/modules/webos/platform/"}}},{node:{fields:{slug:"/docs/modules/webos/pmloglib/"}}},{node:{fields:{slug:"/docs/modules/webos/speech/"}}}]},site:{siteMetadata:{title:"Enact"}},docsPages:{edges:[{node:{path:"/docs/developer-guide/",context:{title:null}}},{node:{path:"/docs/developer-tools/",context:{title:null}}},{node:{path:"/docs/modules/",context:{title:null}}},{node:{path:"/docs/tutorials/",context:{title:null}}}]},jsMetadata:{edges:[{node:{fields:{slug:"/docs/developer-guide/"},fileAbsolutePath:"/home/goun/Source/enact-docs/src/pages/docs/developer-guide/index.js",frontmatter:{title:"Developer Guide"}}},{node:{fields:{slug:"/docs/developer-tools/"},fileAbsolutePath:"/home/goun/Source/enact-docs/src/pages/docs/developer-tools/index.js",frontmatter:{title:"Developer Tools"}}},{node:{fields:{slug:"/docs/modules/"},fileAbsolutePath:"/home/goun/Source/enact-docs/src/pages/docs/modules/index.js",frontmatter:{title:"API Libraries"}}},{node:{fields:{slug:"/docs/tutorials/"},fileAbsolutePath:"/home/goun/Source/enact-docs/src/pages/docs/tutorials/index.js",frontmatter:{title:"Tutorials"}}}]}},pathContext:{slug:"/docs/modules/ui/Layout/",title:"ui/Layout"}}}});