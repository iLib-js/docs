webpackJsonp([0x6aaea40dfc76],{968:function(e,t){e.exports={data:{markdownRemark:{html:'<nav role="navigation" class="page-toc">\n<ul>\n<li><a href="#generating-the-base-app-template">Generating the Base App Template</a></li>\n<li><a href="#enact-project-settings">Enact Project Settings</a></li>\n<li><a href="#available-npm-tasks">Available npm Tasks</a></li>\n</ul>\n</nav>\n<h2 id="generating-the-base-app-template"><a href="#generating-the-base-app-template" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Generating the Base App Template</h2>\n<div class="gatsby-highlight" data-language="none">\n      <pre class="language-none"><code class="language-none">  Usage\n    enact create [options] [<directory>]\n\n  Arguments\n    directory         Optional project destination directory\n                          (default: current working directory)\n\n  Options\n    -t, --template    Specific template to use\n    -local            Include @enact/cli locally in the project\n    -verbose          Verbose output logging</code></pre>\n      </div>\n<p>This will generate a basic app based on the Moonstone project template, complete with Enact libraries, React, and a fully configured <strong>package.json</strong>.</p>\n<h2 id="enact-project-settings"><a href="#enact-project-settings" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Enact Project Settings</h2>\n<p>The @enact/cli tool will check the project’s <strong>package.json</strong> looking for an optional <code class="language-text">enact</code> object for a few customization options:</p>\n<ul>\n<li><code class="language-text">template</code> <em>[string]</em> - Filepath to an alternate HTML template to use with the <a href="https://github.com/ampedandwired/html-webpack-plugin">Webpack html-webpack-plugin</a>.</li>\n<li><code class="language-text">isomorphic</code> <em>[string]</em> - Alternate filepath to a custom isomorphic-compatible entry point. Not needed if main entry point is already isomorphic-compatible.</li>\n<li><code class="language-text">title</code> <em>[string]</em> - Title text that should be put within the HTML’s <code class="language-text">&lt;title&gt;&lt;/title&gt;</code> tags. Note: if this is a webOS-project, the title will, by default, be auto-detected from the <strong>appinfo.json</strong> content.</li>\n<li><code class="language-text">theme</code> <em>[object]</em> - A simplified string name to extrapolate <code class="language-text">fontGenerator</code>, <code class="language-text">ri</code>, and <code class="language-text">screenTypes</code> preset values from. For example, <code class="language-text">&quot;moonstone&quot;</code></li>\n<li><code class="language-text">fontGenerator</code> <em>[string]</em> - Filepath to a CommonJS fontGenerator module which will build locale-specific font CSS to inject into the HTML. By default, will use any preset for a specified theme or fallback to moonstone.</li>\n<li><code class="language-text">ri</code> <em>[object]</em> - Resolution independence options to be forwarded to the <a href="https://github.com/enyojs/less-plugin-resolution-independence">LESS plugin</a>. By default, will use any preset for a specified theme or fallback to moonstone</li>\n<li><code class="language-text">screenTypes</code> <em>[array|string]</em> - Array of 1 or more screentype definitions to be used with prerender HTML initialization. Can alternatively reference a json filepath to read for screentype definitions.  By default, will use any preset for a specified theme or fallback to moonstone.</li>\n<li><code class="language-text">nodeBuiltins</code> <em>[object]</em> - Configuration settings for polyfilling NodeJS built-ins. See <code class="language-text">node</code> <a href="https://webpack.js.org/configuration/node/">webpack option</a>.</li>\n<li><code class="language-text">externalStartup</code> <em>[boolean]</em> - Flag whether to externalize the startup/update js that is normally inlined within prerendered app HTML output.</li>\n<li><code class="language-text">forceCSSModules</code> <em>[boolean]</em> - Flag whether to force all LESS/CSS to be processed in a modular context (not just the <code class="language-text">*.module.css</code> and <code class="language-text">*.module.less</code> files).</li>\n<li><code class="language-text">deep</code> <em>[string|array]</em> - 1 or more JavaScript conditions that, when met, indicate deeplinking and any prerender should be discarded.</li>\n<li><code class="language-text">target</code> <em>[string|array]</em> - A build-type generic preset string (see <code class="language-text">target</code> <a href="https://webpack.js.org/configuration/target/">webpack option</a>) or alternatively a specific <a href="https://github.com/ai/browserslist">browserslist array</a> of desired targets.</li>\n<li><code class="language-text">proxy</code> <em>[string]</em> - Proxy target during project <code class="language-text">serve</code> to be used within the <a href="https://github.com/chimurai/http-proxy-middleware">http-proxy-middleware</a>.</li>\n</ul>\n<p>For example:</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>\n\t<span class="token operator">...</span>\n\t<span class="token string">"enact"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token string">"theme"</span><span class="token operator">:</span> <span class="token string">"moonstone"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"nodeBuiltins"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\tfs<span class="token operator">:</span> <span class="token string">\'empty\'</span><span class="token punctuation">,</span>\n\t\t\tnet<span class="token operator">:</span> <span class="token string">\'empty\'</span><span class="token punctuation">,</span>\n\t\t\ttls<span class="token operator">:</span> <span class="token string">\'empty\'</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token operator">...</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h2 id="available-npm-tasks"><a href="#available-npm-tasks" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Available npm Tasks</h2>\n<p>Included within the project template are a number of npm tasks available, with each mapped to Enact CLI commands:</p>\n<ul>\n<li><code class="language-text">npm run serve</code> - Packages and hosts the app on a local http server using <a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a>. Supports hot module replacement and inline updates as the source code changes.</li>\n<li><code class="language-text">npm run pack</code> - Packages the app into <strong>./dist</strong> in development mode (unminified code, with any applicable development code).</li>\n<li><code class="language-text">npm run pack-p</code> - Packages the app into <strong>./dist</strong> in production mode (minified code, with development code dropped).</li>\n<li><code class="language-text">npm run watch</code> - Packages in development mode and sets up a watcher that will rebuild the app whenever the source code changes.</li>\n<li><code class="language-text">npm run test</code> - Builds and executes any test spec files within the project.</li>\n<li><code class="language-text">npm run lint</code>- Lints the project’s JavaScript files according to the Enact ESLint configuration settings and optionally TSLint.</li>\n<li><code class="language-text">npm run clean</code> - Deletes the <strong>./dist</strong> directory</li>\n</ul>\n<p>That’s it! Now you have a fully functioning app environment.</p>',frontmatter:{title:"Starting a New App",github:"https://github.com/enactjs/cli/blob/develop/docs/starting-a-new-app.md"}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/docs/developer-tools/cli/installation/"},frontmatter:{title:"Installation"}}},{node:{fields:{slug:"/docs/developer-tools/cli/starting-a-new-app/"},frontmatter:{title:"Starting a New App"}}},{node:{fields:{slug:"/docs/developer-tools/cli/loading-existing-app/"},frontmatter:{title:"Loading an Existing App"}}},{node:{fields:{slug:"/docs/developer-tools/cli/building-apps/"},frontmatter:{title:"Building Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/isomorphic-support/"},frontmatter:{title:"Isomorphic Support"}}},{node:{fields:{slug:"/docs/developer-tools/cli/serving-apps/"},frontmatter:{title:"Serving Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/testing-apps/"},frontmatter:{title:"Testing Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/ejecting-apps/"},frontmatter:{title:"Ejecting Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/template-management/"},frontmatter:{title:"Template Management"}}},{node:{fields:{slug:"/docs/developer-tools/cli/developing-a-template/"},frontmatter:{title:"Developing a Template"}}},{node:{fields:{slug:"/docs/developer-tools/cli/"},frontmatter:{title:"Enact CLI Development Tool"}}}]},site:{siteMetadata:{title:"I18N & L10N"}},docsPages:{edges:[{node:{path:"/docs/modules/",context:{title:null}}},{node:{path:"/docs/tutorials/",context:{title:null}}}]},jsMetadata:{edges:[{node:{fields:{slug:"/docs/modules/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/modules/index.js",frontmatter:{title:"Getting Started"}}},{node:{fields:{slug:"/docs/tutorials/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/tutorials/index.js",frontmatter:{title:"Internationalization"}}}]}},pathContext:{slug:"/docs/developer-tools/cli/starting-a-new-app/",title:"Starting a New App",parentRegex:"/\\/docs\\/developer-tools\\/cli(\\/[^/]*)?\\/$/"}}}});