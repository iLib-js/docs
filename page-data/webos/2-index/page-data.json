{"componentChunkName":"component---src-templates-docs-js","path":"/webos/2-index","result":{"data":{"site":{"siteMetadata":{"title":"","docsLocation":"https://github.com/iLib-js/docs/tree/master/content"}},"mdx":{"fields":{"id":"c31c83d4-2b16-51d0-9da5-39ce99e8057e","title":"webOS Localization","slug":"/webos/2-index"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"webOS Localization\",\n  \"metaTitle\": \"webOS Localization Page\",\n  \"metaDescription\": \"webOS Localization Page\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Overview\"), mdx(\"p\", null, \"If your applications or serves need localization string,\\nYou need to Write code for your apps and services using the provided internationalization (i18n) libraries. \"), mdx(\"p\", null, \"Please refer to the following explanation depends on your programming languages.\"), mdx(\"h1\", null, \"JavaScript\"), mdx(\"h2\", null, \"Enact\"), mdx(\"p\", null, \"Enact provides functions called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://enactjs.com/docs/modules/i18n/$L/\"\n  }), \"$L\"), \" to map to translated strings.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import $L, {toIString} from '@enact/i18n/$L';\\n\\n$L('Close');        // => \\\"Close\\\" in the current locale\\n\\n\")), mdx(\"h2\", null, \"Non Enact\"), mdx(\"p\", null, \"For web apps that do not utilize Enact framework, use the  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ilib-js.github.io/iLib/docs/api/jsdoc/symbols/ResBundle.html#getString\"\n  }), \"ResBundle.getString\"), \" API of ResBundle feature in iLib.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First, load the iLib library ilib-web.js through the  \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"script\"), \" tag.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-HTML\"\n  }), \"\\n<html>\\n<head>\\n<script src=<path-to-ilib>/lib/ilib-web.js type=\\\"text/javascript\\\"></script>\\n...\\n</head>\\n</html>\\n\")), mdx(\"p\", null, \"For instance, if you\\u2019re developing a built-in web app, the iLib library can be loaded as follows:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"<script src=file://usr/share/javascript/ilib/lib/ilib-web.js type=\\\"text/javascript\\\"></script>\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"After that, use the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ilib-js.github.io/iLib/docs/api/jsdoc/symbols/ResBundle.html#getString\"\n  }), \"ResBundle.getString\"), \" method of iLib as shown in the example below:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var ResBundle = require(\\\"ResBundle.js\\\");\\n\\nvar rb = new ResBundle({locale: \\\"en-US\\\"});\\nvar str = rb.getString(\\\"String 1\\\"); // str is iLib string object\\nvar jsStr = str.toString(); // jsStr is js string object\\n\")), mdx(\"h2\", null, \"Nodejs\"), mdx(\"p\", null, \"If you are a nodejs developer, you need to load \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"iLib\"), \" first using the built-in nodejs require() function.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var ResBundle = require(\\\"/usr/share/javascript/ilib/lib/ResBundle\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var rb = new ResBundle({locale: \\\"ko-KR\\\"});\\nvar str = rb.getString(\\\"Hello\\\");\\nvar jsStr = str.toString()\\n\")), mdx(\"h1\", null, \"QML\"), mdx(\"p\", null, \"It follows the general rules.\\nStrings in QML can be marked for translation using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTr-method\"\n  }), \"qsTr\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTranslate-method\"\n  }), \"qsTranslate\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTrId-method\"\n  }), \"qsTrId\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTrIdNoOp-method\"\n  }), \"QT_TR_NOOP\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qml-qtqml-qt.html#qsTranslateNoOp-method\"\n  }), \"QT_TRANSLATE_NOOP\"), \", and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qtglobal.html#QT_TRID_NOOP\"\n  }), \"QT_TRID_NOOP\"), \". Pleas refer to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doc.qt.io/qt-5/qtquick-internationalization.html\"\n  }), \"official documentation\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-qml\"\n  }), \"\\nText {\\n    id: txt1;\\n    text: qsTr(\\\"Back\\\");\\n}\\n\\n\")), mdx(\"h1\", null, \"C/C++\"), mdx(\"p\", null, \"Translated strings can be retrieved by calling functions and methods implemented in the library \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/webosose/libwebosi18n\"\n  }), mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"libwebosi18n\")), \"\\nThis is a small library that allows you to load sets of strings known as a resource bundle from json files\\nin the same way that the Javascript code does. This class retrieves translations\\nfor strings, and formats them with parameters for display to the user.\"), mdx(\"h4\", null, \"C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const char* resBundle_getLocString(\\n            ResBundleC * bundle,\\n            const char * source);\\n\\nconst char* resBundle_getLocStringWithKey(\\n            ResBundleC * bundle,\\n            const char * key,\\n            const char * source);\\n\")), mdx(\"p\", null, \"Usage:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-c\"\n  }), \"// put this include at the top\\n#include <webosi18n_C.h>\\n\\nconst char* locale = \\\"en-US\\\";\\nconst char* file = \\\"cstrings.json\\\";\\nconst char* resources_path = \\\"/usr/share/localization/samplec\\\";\\nResBundleC* resBundle = resBundle_createWithRootPath(locale, file, resources_path);\\n\\nresBundle_getLocString(resBundle, \\\"String 1\\\");\\n\\n\")), mdx(\"h4\", null, \"C++\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const string& ResBundle::getLocString(const string& source)\\nconst string& ResBundle::getLocString(const string& key, const string& source)\\n\")), mdx(\"p\", null, \"Usage:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"// put this include at the top\\n#include <webosi18n.h>\\n\\nstd::string locale = \\\"en-US\\\";\\nconst std::string file = \\\"cppstrings.json\\\";\\nconst std::string resources_path = \\\"/usr/share/localization/samplecpp\\\";\\nResBundle* resBundle = new ResBundle(locale, file, resources_path);\\n\\nresBundle->getLocString(\\\"String 1\\\");\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#javascript","title":"JavaScript","items":[{"url":"#enact","title":"Enact"},{"url":"#non-enact","title":"Non Enact"},{"url":"#nodejs","title":"Nodejs"}]},{"url":"#qml","title":"QML"},{"url":"#cc","title":"C/C++","items":[{"items":[{"items":[{"url":"#c","title":"C"},{"url":"#c-1","title":"C++"}]}]}]}]},"parent":{"__typename":"File","relativePath":"webos/2-index.md"},"frontmatter":{"metaTitle":"webOS Localization Page","metaDescription":"webOS Localization Page","canonicalUrl":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/aboutus","title":"About US"}}},{"node":{"fields":{"slug":"/i18n","title":"Internationalization"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/l10n","title":"Localization"}}},{"node":{"fields":{"slug":"/knowledge","title":"I18N Knowledge"}}},{"node":{"fields":{"slug":"/webos","title":"webOS Platform"}}},{"node":{"fields":{"slug":"/i18n/1-index","title":"Getting iLib into your project"}}},{"node":{"fields":{"slug":"/i18n/3-index","title":"Data Formatting"}}},{"node":{"fields":{"slug":"/i18n/2-index","title":"Handling Strings"}}},{"node":{"fields":{"slug":"/i18n/4-index","title":"Basic Information"}}},{"node":{"fields":{"slug":"/knowledge/1-index","title":"I18N Basic Knowledge"}}},{"node":{"fields":{"slug":"/l10n/1-index","title":"Process"}}},{"node":{"fields":{"slug":"/webos/1-index","title":"webOS Internationalization"}}},{"node":{"fields":{"slug":"/webos/2-index","title":"webOS Localization"}}},{"node":{"fields":{"slug":"/webos/3-index","title":"webOS Localization Setup"}}}]}},"pageContext":{"id":"c31c83d4-2b16-51d0-9da5-39ce99e8057e"}}}