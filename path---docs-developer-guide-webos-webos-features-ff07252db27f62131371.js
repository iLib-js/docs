webpackJsonp([0x5c97909ea679],{958:function(e,a){e.exports={data:{markdownRemark:{html:'<h2 id="built-in-webos-events"><a href="#built-in-webos-events" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Built-in webOS Events</h2>\n<p>Included within the webOS system itself are the following custom document events:</p>\n<ul>\n<li><code class="language-text">webOSLaunch</code>: Dispatched when the application launches and the launch parameters are received. The launch parameters are included within the event data. Note that this does not necessarily mean that the application has been loaded or rendered.</li>\n<li><code class="language-text">webOSRelaunch</code>: Dispatched when an already-running application is launched, potentially with new launch parameters.</li>\n<li><code class="language-text">webOSLocaleChange</code>: Dispatched when the system changes its language settings.</li>\n</ul>\n<p>To listen for these events, you can use the global dispatcherâ€™s <code class="language-text">on()</code> method.</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>off<span class="token punctuation">,</span> on<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@enact/core/dispatcher\'</span><span class="token punctuation">;</span>\n<span class="token operator">...</span>\n<span class="token keyword">const</span> <span class="token function-variable function">handleLaunch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'APP LAUNCH\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'webOSLaunch\'</span><span class="token punctuation">,</span> handleLaunch<span class="token punctuation">,</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">...</span></code></pre>\n      </div>\n<h2 id="code-classlanguage-textenactweboscode"><a href="#code-classlanguage-textenactweboscode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code class="language-text">@enact/webos</code></h2>\n<p>The <code class="language-text">@enact/webos</code> library has a number of features designed exclusively for the webOS platform, including service integration\nwith LS2Request and other useful platform APIs.</p>\n<ul>\n<li><code class="language-text">@enact/webos/application</code> - provides information about the application metadata</li>\n<li><code class="language-text">@enact/webos/deviceinfo</code> - returns various details about the webOS device where the application is running</li>\n<li><code class="language-text">@enact/webos/keyboard</code> - use to see if the keyboard is currently visible</li>\n<li>\n<p><code class="language-text">@enact/webos/LS2Request</code> - without this, your application cannot use the myriad webOS services that are available!</p>\n<ul>\n<li><a href="../luna-service-api/#example">Luna Service API example</a></li>\n</ul>\n</li>\n<li><code class="language-text">@enact/webos/platform</code> - returns various details about the webOS platform where the application is running (SmartTV, Open webOS, legacy devices (Palm, HP), etc.)</li>\n<li><code class="language-text">@enact/webos/pmloglib</code> - system-level logging for your application</li>\n<li><code class="language-text">@enact/webos/speech</code> - working with webOS speech APIs</li>\n</ul>',frontmatter:{title:"Using webOS Features",github:"https://github.com/enactjs/enact/blob/develop/packages/webos/docs/webos-features.md"}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/docs/developer-guide/webos/luna-service-api/"},frontmatter:{title:"Luna Service API"}}},{node:{fields:{slug:"/docs/developer-guide/webos/webos-features/"},frontmatter:{title:"Using webOS Features"}}},{node:{fields:{slug:"/docs/developer-guide/webos/"},frontmatter:{title:"webOS Support Module"}}}]},site:{siteMetadata:{title:"I18N & L10N"}},docsPages:{edges:[{node:{path:"/docs/modules/",context:{title:null}}},{node:{path:"/docs/tutorials/",context:{title:null}}}]},jsMetadata:{edges:[{node:{fields:{slug:"/docs/tutorials/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/tutorials/index.js",frontmatter:{title:"Internationalization"}}},{node:{fields:{slug:"/docs/modules/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/modules/index.js",frontmatter:{title:"Getting Started"}}}]}},pathContext:{slug:"/docs/developer-guide/webos/webos-features/",title:"Using webOS Features",parentRegex:"/\\/docs\\/developer-guide\\/webos(\\/[^/]*)?\\/$/"}}}});