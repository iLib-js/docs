webpackJsonp([0x8f6bed20e728],{938:function(n,a){n.exports={data:{markdownRemark:{html:'<nav role="navigation" class="page-toc">\n<ul>\n<li><a href="#overview">Overview</a></li>\n<li><a href="#using-third-party-components-inside-of-enact">Using Third-Party Components Inside of Enact</a></li>\n<li><a href="#using-enact-outside-of-enact">Using Enact Outside of Enact</a></li>\n<li><a href="#theming">Theming</a></li>\n</ul>\n</nav>\n<h2 id="overview"><a href="#overview" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview</h2>\n<p>Enact is a fantastic way to build apps. However, you’re not limited to developing your apps using\nonly Enact components, nor are you prevented from using pieces of Enact in other React apps.  You\ncan mix and match third-party libraries with Enact easily.</p>\n<h2 id="using-third-party-components-inside-of-enact"><a href="#using-third-party-components-inside-of-enact" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Third-Party Components Inside of Enact</h2>\n<p>When creating an app using <code class="language-text">enact create</code>, it creates app boilerplate that is set up for a\n<code class="language-text">Moonstone</code> styled app. However, if you want to use another UI library like\n<a href="https://material-ui.com/"><code class="language-text">material-ui</code></a> (see: <a href="https://codesandbox.io/s/l5my52r299">Moonstone + material-ui example</a>), <a href="https://reactstrap.github.io/"><code class="language-text">reactstrap</code></a>, or <a href="https://reacttraining.com/react-router/"><code class="language-text">react-router</code></a>, just use <code class="language-text">npm install</code>.</p>\n<p>You can include components just like you normally would by using <code class="language-text">import</code>.</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'reactstrap\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">kind</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tname<span class="token operator">:</span> <span class="token string">\'App\'</span><span class="token punctuation">,</span>\n\n\t<span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n\t\t<span class="token operator">&lt;</span>div<span class="token operator">></span>\n\t\t\t<span class="token operator">&lt;</span>Button color<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>Danger<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n\t\t<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n\t<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>For libraries like bootstrap, you can also import the css in your <code class="language-text">App.less</code> file.</p>\n<div class="gatsby-highlight" data-language="css">\n      <pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@global-import</span> <span class="token string">\'bootstrap/dist/css/bootstrap.css\'</span><span class="token punctuation">;</span></span></code></pre>\n      </div>\n<p>The advantage of this is you get to use Enact’s <code class="language-text">cli</code> to develop, test, and build applications.</p>\n<p>There is also a <a href="https://codesandbox.io/s/z2wnj3jznx">Moonstone starter template</a> on CodeSandbox that can be used to quickly test\nhow third-party libraries and components can be used with Enact.</p>\n<h2 id="using-enact-outside-of-enact"><a href="#using-enact-outside-of-enact" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Enact Outside of Enact</h2>\n<p>If you’re using something like <code class="language-text">create-react-app</code>, it’s pretty easy to use Enact as a module.</p>\n<p>You can create a new application, as follows:</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">create-react-app react-add-enact</code></pre>\n      </div>\n<p>Then, add/install Enact dependencies like <code class="language-text">@enact/core</code> and <code class="language-text">@enact/ui</code> to <code class="language-text">package.json</code>.</p>\n<p>At this point you can use core Enact features (<code class="language-text">kind</code> with computed props) and un-styled\ncomponents (<code class="language-text">ui/Button</code>).</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> kind <span class="token keyword">from</span> <span class="token string">\'@enact/core/kind\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@enact/ui/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">kind</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tname<span class="token operator">:</span> <span class="token string">\'App\'</span><span class="token punctuation">,</span>\n\n\t<span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n\t\t<span class="token operator">&lt;</span>Button<span class="token operator">></span>Hello Enact<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n\t<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>You can even use <code class="language-text">Moonstone</code> themed components after installing <code class="language-text">@enact/moonstone</code>.</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> BodyText <span class="token keyword">from</span> <span class="token string">\'@enact/moonstone/BodyText\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@enact/moonstone/Button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> MoonstoneDecorator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@enact/moonstone/MoonstoneDecorator\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n\t<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">(</span>\n\t\t\t<span class="token operator">&lt;</span>div<span class="token operator">></span>\n\t\t\t\t<span class="token operator">&lt;</span>BodyText centered<span class="token operator">></span>\n\t\t\t\t\tThese are Enact Moonstone components <span class="token keyword">in</span> a <span class="token constant">CRA</span> app\n\t\t\t\t<span class="token operator">&lt;</span><span class="token operator">/</span>BodyText<span class="token operator">></span>\n\t\t\t\t<span class="token operator">&lt;</span>Button<span class="token operator">></span>Click me<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n\t\t\t<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">MoonstoneDecorator</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h3 id="styling-enact-components-outside-of-enact"><a href="#styling-enact-components-outside-of-enact" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Styling Enact Components Outside of Enact</h3>\n<p>Behind the scenes, Enact supports using CSS modules and most Enact components provide public class\nnames that can be overridden to easily change their style.</p>\n<h4 id="cra-example"><a href="#cra-example" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CRA Example</h4>\n<p>If you are using <code class="language-text">react-scripts</code> version <code class="language-text">2.0.0</code> or later, you can import style overrides by using\nthe <code class="language-text">[component].module.css</code> filename convention.  For earlier versions, you will need to eject\nthe CRA app and modify the webpack configuration to enable CSS modules.  This <a href="https://medium.com/nulogy/how-to-use-css-modules-with-create-react-app-9e44bec2b5c2">article</a>\nis a good reference for enabling CSS modules prior to <code class="language-text">2.0.0</code>. </p>\n<div class="gatsby-highlight" data-language="css">\n      <pre class="language-css"><code class="language-css"><span class="token comment">/* Button.module.css */</span>\n<span class="token selector">.bg</span> <span class="token punctuation">{</span> <span class="token comment">/* public class name in Moonstone/Button */</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #a4939d <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// App.js</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@enact/moonstone/Button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> MoonstoneDecorator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@enact/moonstone/MoonstoneDecorator\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> buttonCss <span class="token keyword">from</span> <span class="token string">\'./Button.module.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n\t<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">(</span>\n\t\t\t<span class="token operator">&lt;</span>div<span class="token operator">></span>\n\t\t\t\t<span class="token operator">&lt;</span>Button css<span class="token operator">=</span><span class="token punctuation">{</span>buttonCss<span class="token punctuation">}</span><span class="token operator">></span>Click me<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n\t\t\t<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">MoonstoneDecorator</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h3 id="internationalization-outside-of-enact"><a href="#internationalization-outside-of-enact" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Internationalization Outside of Enact</h3>\n<h4 id="cra-example-1"><a href="#cra-example-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CRA Example</h4>\n<p>In order to use the <a href="../../developer-guide/i18n"><code class="language-text">@enact/i18n</code></a> library for internationalization, you can <a href="https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject">eject</a>\nyour CRA app, install your required Enact libraries (plus, <code class="language-text">@enact/dev-utils</code>), and update the webpack configuration.</p>\n<div class="gatsby-highlight" data-language="json">\n      <pre class="language-json"><code class="language-json"><span class="token comment">// package.json</span>\n\n...\n<span class="token property">"devDependencies"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">"@enact/dev-utils"</span><span class="token operator">:</span> <span class="token string">"2.0.0"</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  ...\n  <span class="token property">"@enact/i18n"</span><span class="token operator">:</span> <span class="token string">"2.3.0"</span><span class="token punctuation">,</span>\n  <span class="token property">"@enact/moonstone"</span><span class="token operator">:</span> <span class="token string">"2.3.0"</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n...\n\n<span class="token comment">// webpack.config.js</span>\n...\nconst <span class="token punctuation">{</span>GracefulFsPlugin<span class="token punctuation">,</span> ILibPlugin<span class="token punctuation">}</span> = require(\'@enact/dev-utils\');\n...\nplugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token comment">// new GracefulFsPlugin(), // use on Windows OS if you run into filesystem handler problems</span>\n  new ILibPlugin()\n<span class="token punctuation">]</span>\n...</code></pre>\n      </div>\n<h2 id="theming"><a href="#theming" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Theming</h2>\n<p>Enact also has support theming. This way you can take our components and style them to best fit\nthe platform you wish to target. You can learn about that in our\n<a href="../../developer-guide/theming/"><code class="language-text">Theming</code></a> section.</p>',frontmatter:{title:"Using Enact with Third-party Libraries",github:"https://github.com/enactjs/enact/blob/develop/docs/interoperability.md"}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/docs/developer-guide/accessibility/"},frontmatter:{title:"Accessibility Support in Enact"}}},{node:{fields:{slug:"/docs/developer-guide/resources/"},frontmatter:{title:"Additional Developer Resources"}}},{node:{fields:{slug:"/docs/developer-guide/contributing/"},frontmatter:{title:"Contribution Guide"}}},{node:{fields:{slug:"/docs/developer-guide/creating-components/"},frontmatter:{title:"Creating Components the Enact Way"}}},{node:{fields:{slug:"/docs/developer-guide/best-practices/"},frontmatter:{title:"Enact Best Practices"}}},{node:{fields:{slug:"/docs/developer-guide/performance/"},frontmatter:{title:"Enact Performance Guide"}}},{node:{fields:{slug:"/docs/developer-guide/glossary/"},frontmatter:{title:"Glossary"}}},{node:{fields:{slug:"/docs/developer-guide/migration/"},frontmatter:{title:"Migration Guides"}}},{node:{fields:{slug:"/docs/developer-guide/redux/"},frontmatter:{title:"Redux"}}},{node:{fields:{slug:"/docs/developer-guide/spotlight/"},frontmatter:{title:"Spotlight"}}},{node:{fields:{slug:"/docs/developer-guide/testing-components/"},frontmatter:{title:"Testing Your Components"}}},{node:{fields:{slug:"/docs/developer-guide/theming/"},frontmatter:{title:"Theming"}}},{node:{fields:{slug:"/docs/developer-guide/interoperability/"},frontmatter:{title:"Using Enact with Third-party Libraries"}}},{node:{fields:{slug:"/docs/developer-guide/why-use-kind/"},frontmatter:{title:"Why Use kind()?"}}},{node:{fields:{slug:"/docs/developer-guide/i18n/"},frontmatter:{title:"i18n (Internationalization)"}}},{node:{fields:{slug:"/docs/developer-guide/webos/"},frontmatter:{title:"webOS Support Module"}}}]},site:{siteMetadata:{title:"I18N & L10N"}},docsPages:{edges:[{node:{path:"/docs/modules/",context:{title:null}}},{node:{path:"/docs/tutorials/",context:{title:null}}}]},jsMetadata:{edges:[{node:{fields:{slug:"/docs/modules/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/modules/index.js",frontmatter:{title:"Getting Started"}}},{node:{fields:{slug:"/docs/tutorials/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/tutorials/index.js",frontmatter:{title:"Internationalization"}}}]}},pathContext:{slug:"/docs/developer-guide/interoperability/",title:"Using Enact with Third-party Libraries",parentRegex:"/\\/docs\\/developer-guide(\\/[^/]*)?\\/$/"}}}});