webpackJsonp([78033300886418],{962:function(e,t){e.exports={data:{markdownRemark:{html:'<nav role="navigation" class="page-toc">\n<ul>\n<li><a href="#static-templates">Static Templates</a></li>\n<li><a href="#dynamic-template-generators">Dynamic Template Generators</a></li>\n<li><a href="#distributing">Distributing</a></li>\n</ul>\n</nav>\n<h2 id="static-templates"><a href="#static-templates" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Static Templates</h2>\n<p>The simplest form of template supported by the Enact CLI is a flat static directory of files to be copied. Static templates should include a root-level <strong>package.json</strong>, which will get <code class="language-text">npm install</code> executed upon creation via <code class="language-text">enact create</code>.</p>\n<h2 id="dynamic-template-generators"><a href="#dynamic-template-generators" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dynamic Template Generators</h2>\n<p>An enhanced form of template generators are also supported. In this form, the static template files are within a <strong>./template</strong> subdirectory and a root-level <strong>index.js</strong> is available. The <strong>index.js</strong> can export hooks which <code class="language-text">enact create</code> can tie into.</p>\n<p>Available optional properties that can be exported:</p>\n<ul>\n<li><code class="language-text">overwrite</code> <em>[boolean]</em> Whether or not to overwrite existing files when copying the files from <strong>./template</strong>.</li>\n<li><code class="language-text">install</code> <em>[boolean]</em> Whether or not to run <code class="language-text">npm install</code> during <code class="language-text">enact create</code>.</li>\n<li><code class="language-text">validate</code> <em>[function]</em> Code run when validating the <code class="language-text">enact create</code> target directory/name. Should throw or return a rejected <em>Promise</em> when an invalid name is used.</li>\n<li><code class="language-text">prepare</code> <em>[function]</em> Code run just before copying the static files within <strong>./template</strong> to the target directory.</li>\n<li><code class="language-text">setup</code> <em>[function]</em> Code run just after copying the static files, but before running <code class="language-text">npm install</code>. </li>\n<li><code class="language-text">complete</code> <em>[function]</em> Code run just after everything is finished. Useful to output instructions or a message to the user.</li>\n</ul>\n<p>When omitted/<code class="language-text">undefined</code>, the function/promise properties will fallback to the <a href="https://github.com/enactjs/cli/blob/master/commands/create.js#L38">default application template handler property values</a>. If explicitly set as <code class="language-text">false</code>, those events will be disabled during <code class="language-text">enact create</code>.  When defining a function property, it must be synchronous or otherwise return a <em>Promise</em> for asynchronous evaluation.</p>\n<p>Note: template generators can even have their own root <strong>package.json</strong> with dependencies that will be installed locally when the template is installed.</p>\n<p>A selection of dynamic templates made by the Enact team can be found at <a href="https://github.com/enactjs/templates">https://github.com/enactjs/templates</a> covering a wide variety of use-cases, such as Cordova and Electron.</p>\n<h2 id="distributing"><a href="#distributing" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Distributing</h2>\n<p>For static templates, git repositories are a simple and straightforward method of sharing. Dynamic template generators have the added advantage of distribution on npm if desired.</p>\n<p>Created a template of your own? <a href="https://gitter.im/EnactJS/Lobby">Weâ€™d love to hear about it!</a></p>',frontmatter:{title:"Developing a Template",github:"https://github.com/enactjs/cli/blob/develop/docs/developing-a-template.md"}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/docs/developer-tools/cli/installation/"},frontmatter:{title:"Installation"}}},{node:{fields:{slug:"/docs/developer-tools/cli/starting-a-new-app/"},frontmatter:{title:"Starting a New App"}}},{node:{fields:{slug:"/docs/developer-tools/cli/loading-existing-app/"},frontmatter:{title:"Loading an Existing App"}}},{node:{fields:{slug:"/docs/developer-tools/cli/building-apps/"},frontmatter:{title:"Building Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/isomorphic-support/"},frontmatter:{title:"Isomorphic Support"}}},{node:{fields:{slug:"/docs/developer-tools/cli/serving-apps/"},frontmatter:{title:"Serving Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/testing-apps/"},frontmatter:{title:"Testing Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/ejecting-apps/"},frontmatter:{title:"Ejecting Apps"}}},{node:{fields:{slug:"/docs/developer-tools/cli/template-management/"},frontmatter:{title:"Template Management"}}},{node:{fields:{slug:"/docs/developer-tools/cli/developing-a-template/"},frontmatter:{title:"Developing a Template"}}},{node:{fields:{slug:"/docs/developer-tools/cli/"},frontmatter:{title:"Enact CLI Development Tool"}}}]},site:{siteMetadata:{title:"I18N & L10N"}},docsPages:{edges:[{node:{path:"/docs/modules/",context:{title:null}}},{node:{path:"/docs/tutorials/",context:{title:null}}}]},jsMetadata:{edges:[{node:{fields:{slug:"/docs/tutorials/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/tutorials/index.js",frontmatter:{title:"Internationalization"}}},{node:{fields:{slug:"/docs/modules/"},fileAbsolutePath:"/home/goun/Source/opensource_iLib/docs/src/pages/docs/modules/index.js",frontmatter:{title:"Getting Started"}}}]}},pathContext:{slug:"/docs/developer-tools/cli/developing-a-template/",title:"Developing a Template",parentRegex:"/\\/docs\\/developer-tools\\/cli(\\/[^/]*)?\\/$/"}}}});